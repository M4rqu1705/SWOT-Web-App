{"version":3,"sources":["scripts/dragdroptouch.js","components/Entry.js","components/Bucket.js","components/Table.js","components/AddEntry.js","components/Dialog.js","App.js","index.js"],"names":["DragDropTouch","DragDropTouch_1","DataTransfer","this","_dropEffect","_effectAllowed","_data","Object","defineProperty","prototype","get","set","value","enumerable","configurable","keys","clearData","type","getData","setData","setDragImage","img","offsetX","offsetY","ddt","_instance","_imgCustom","_imgOffset","x","y","_lastClick","supportsPassive","document","addEventListener","d","ts","_touchstart","bind","tm","_touchmove","te","_touchend","opt","passive","capture","getInstance","e","_this","_shouldHandle","Date","now","_DBLCLICK","_dispatchEvent","target","preventDefault","_reset","src","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","setTimeout","_img","_CTXMENU","_ISPRESSHOLDMODE","_pressHoldInterval","_isDragEnabled","_PRESSHOLDAWAIT","_shouldCancelPressHoldMove","_shouldHandleMove","_shouldHandlePressHoldMove","_getTarget","_shouldStartDragging","_createImage","_lastTarget","_moveImage","_isDropZone","_destroyImage","indexOf","defaultPrevented","touches","length","_getDelta","_PRESSHOLDMARGIN","delta","_THRESHOLD","_PRESSHOLDTHRESHOLD","_dataTransfer","clearInterval","page","pageX","clientX","pageY","clientY","p","Math","abs","pt","el","elementFromPoint","getComputedStyle","pointerEvents","parentElement","cloneNode","_copyStyle","style","top","left","rc","getBoundingClientRect","opacity","_OPACITY","toString","body","appendChild","removeChild","requestAnimationFrame","s","position","zIndex","round","_copyProps","dst","props","i","_rmvAtts","forEach","att","removeAttribute","HTMLCanvasElement","cSrc","cDst","width","height","getContext","drawImage","cs","key","children","evt","createEvent","t","initEvent","button","which","buttons","_kbdProps","_ptProps","dataTransfer","dispatchEvent","hasAttribute","draggable","split","Entry","entryKey","title","enableThrash","disableThrash","className","onDragStart","onDragEnd","Bucket","background","content","category","handleDrop","backgroundColor","onDragOver","onDrop","map","entry","id","Table","entries","strengthsContent","filter","opportunitiesContent","weaknessesContent","threatsContent","AddEntry","enableOverlay","thrashMode","onClick","Dialog","disableOverlay","addNewEntry","titleRef","useRef","categoryRef","addEntry","current","ref","placeholder","onKeyUp","event","autoFocus","name","App","useState","showDialog","setShowDialog","setThrashMode","JSON","parse","localStorage","getItem","setEntries","newEntries","useEffect","setItem","stringify","newEntry","uuidv4","ReactDOM","render","getElementById"],"mappings":"yHAAA,IAAIA,GACJ,SAAWC,GACP,aAWA,IAAIC,EAAgB,WAChB,SAASA,IACLC,KAAKC,YAAc,OACnBD,KAAKE,eAAiB,MACtBF,KAAKG,MAAQ,GA2FjB,OAzFAC,OAAOC,eAAeN,EAAaO,UAAW,aAAc,CAKxDC,IAAK,WACD,OAAOP,KAAKC,aAEhBO,IAAK,SAAUC,GACXT,KAAKC,YAAcQ,GAEvBC,YAAY,EACZC,cAAc,IAElBP,OAAOC,eAAeN,EAAaO,UAAW,gBAAiB,CAM3DC,IAAK,WACD,OAAOP,KAAKE,gBAEhBM,IAAK,SAAUC,GACXT,KAAKE,eAAiBO,GAE1BC,YAAY,EACZC,cAAc,IAElBP,OAAOC,eAAeN,EAAaO,UAAW,QAAS,CAInDC,IAAK,WACD,OAAOH,OAAOQ,KAAKZ,KAAKG,QAE5BO,YAAY,EACZC,cAAc,IAWlBZ,EAAaO,UAAUO,UAAY,SAAUC,GAC7B,MAARA,SACOd,KAAKG,MAAMW,GAGlBd,KAAKG,MAAQ,MASrBJ,EAAaO,UAAUS,QAAU,SAAUD,GACvC,OAAOd,KAAKG,MAAMW,IAAS,IAW/Bf,EAAaO,UAAUU,QAAU,SAAUF,EAAML,GAC7CT,KAAKG,MAAMW,GAAQL,GASvBV,EAAaO,UAAUW,aAAe,SAAUC,EAAKC,EAASC,GAC1D,IAAIC,EAAMxB,EAAcyB,UACxBD,EAAIE,WAAaL,EACjBG,EAAIG,WAAa,CAAEC,EAAGN,EAASO,EAAGN,IAE/BrB,EA/FS,GAiGpBD,EAAgBC,aAAeA,EAmB/B,IAAIF,EAAiB,WAIjB,SAASA,IAGL,GAFAG,KAAK2B,WAAa,EAEd9B,EAAcyB,UACd,KAAM,0CAIV,IAAIM,GAAkB,EAQtB,GAPAC,SAASC,iBAAiB,QAAQ,cAAiB,CAC/C,cAEI,OADAF,GAAkB,GACX,KAIX,iBAAkBC,SAAU,CAC5B,IAAIE,EAAIF,SAAUG,EAAKhC,KAAKiC,YAAYC,KAAKlC,MAAOmC,EAAKnC,KAAKoC,WAAWF,KAAKlC,MAAOqC,EAAKrC,KAAKsC,UAAUJ,KAAKlC,MAAOuC,IAAMX,GAAkB,CAAEY,SAAS,EAAOC,SAAS,GACxKV,EAAED,iBAAiB,aAAcE,EAAIO,GACrCR,EAAED,iBAAiB,YAAaK,EAAII,GACpCR,EAAED,iBAAiB,WAAYO,GAC/BN,EAAED,iBAAiB,cAAeO,IAiR1C,OA3QAxC,EAAc6C,YAAc,WACxB,OAAO7C,EAAcyB,WAGzBzB,EAAcS,UAAU2B,YAAc,SAAUU,GAC5C,IAAIC,EAAQ5C,KACZ,GAAIA,KAAK6C,cAAcF,GAAI,CAEvB,GAAIG,KAAKC,MAAQ/C,KAAK2B,WAAa9B,EAAcmD,WACzChD,KAAKiD,eAAeN,EAAG,WAAYA,EAAEO,QAGrC,OAFAP,EAAEQ,sBACFnD,KAAKoD,SAKbpD,KAAKoD,SAEL,IAAIC,EAAMrD,KAAKsD,kBAAkBX,EAAEO,QAC/BG,IAEKrD,KAAKiD,eAAeN,EAAG,YAAaA,EAAEO,SACtClD,KAAKiD,eAAeN,EAAG,YAAaA,EAAEO,UAEvClD,KAAKuD,YAAcF,EACnBrD,KAAKwD,QAAUxD,KAAKyD,UAAUd,GAC9B3C,KAAK0D,WAAaf,EAClBA,EAAEQ,iBAEFQ,YAAW,WACHf,EAAMW,aAAeF,GAAqB,MAAdT,EAAMgB,MAC9BhB,EAAMK,eAAeN,EAAG,cAAeU,IACvCT,EAAMQ,WAGfvD,EAAcgE,UACbhE,EAAciE,mBACd9D,KAAK+D,mBAAqBJ,YAAW,WACjCf,EAAMoB,gBAAiB,EACvBpB,EAAMR,WAAWO,KAClB9C,EAAcoE,sBAMrCpE,EAAcS,UAAU8B,WAAa,SAAUO,GAC3C,GAAI3C,KAAKkE,2BAA2BvB,GAClC3C,KAAKoD,cAGP,GAAIpD,KAAKmE,kBAAkBxB,IAAM3C,KAAKoE,2BAA2BzB,GAAI,CAEjE,IAAIO,EAASlD,KAAKqE,WAAW1B,GAC7B,GAAI3C,KAAKiD,eAAeN,EAAG,YAAaO,GAGpC,OAFAlD,KAAK0D,WAAaf,OAClBA,EAAEQ,iBAIFnD,KAAKuD,cAAgBvD,KAAK4D,MAAQ5D,KAAKsE,qBAAqB3B,KAC5D3C,KAAKiD,eAAeN,EAAG,YAAa3C,KAAKuD,aACzCvD,KAAKuE,aAAa5B,GAClB3C,KAAKiD,eAAeN,EAAG,YAAaO,IAGpClD,KAAK4D,OACL5D,KAAK0D,WAAaf,EAClBA,EAAEQ,iBACED,GAAUlD,KAAKwE,cACfxE,KAAKiD,eAAejD,KAAK0D,WAAY,YAAa1D,KAAKwE,aACvDxE,KAAKiD,eAAeN,EAAG,YAAaO,GACpClD,KAAKwE,YAActB,GAEvBlD,KAAKyE,WAAW9B,GAChB3C,KAAK0E,YAAc1E,KAAKiD,eAAeN,EAAG,WAAYO,MAIlErD,EAAcS,UAAUgC,UAAY,SAAUK,GAC1C,GAAI3C,KAAK6C,cAAcF,GAAI,CAEvB,GAAI3C,KAAKiD,eAAejD,KAAK0D,WAAY,UAAWf,EAAEO,QAElD,YADAP,EAAEQ,iBAIDnD,KAAK4D,OACN5D,KAAKuD,YAAc,KACnBvD,KAAKiD,eAAejD,KAAK0D,WAAY,QAASf,EAAEO,QAChDlD,KAAK2B,WAAamB,KAAKC,OAG3B/C,KAAK2E,gBACD3E,KAAKuD,cACDZ,EAAE7B,KAAK8D,QAAQ,UAAY,GAAK5E,KAAK0E,aACrC1E,KAAKiD,eAAejD,KAAK0D,WAAY,OAAQ1D,KAAKwE,aAEtDxE,KAAKiD,eAAejD,KAAK0D,WAAY,UAAW1D,KAAKuD,aACrDvD,KAAKoD,YAMjBvD,EAAcS,UAAUuC,cAAgB,SAAUF,GAC9C,OAAOA,IACFA,EAAEkC,kBACHlC,EAAEmC,SAAWnC,EAAEmC,QAAQC,OAAS,GAIxClF,EAAcS,UAAU6D,kBAAoB,SAAUxB,GACpD,OAAQ9C,EAAciE,kBAAoB9D,KAAK6C,cAAcF,IAI/D9C,EAAcS,UAAU8D,2BAA6B,SAAUzB,GAC7D,OAAO9C,EAAciE,kBACjB9D,KAAKgE,gBAAkBrB,GAAKA,EAAEmC,SAAWnC,EAAEmC,QAAQC,QAIzDlF,EAAcS,UAAU4D,2BAA6B,SAAUvB,GAC7D,OAAO9C,EAAciE,mBAAqB9D,KAAKgE,gBAC3ChE,KAAKgF,UAAUrC,GAAK9C,EAAcoF,kBAIxCpF,EAAcS,UAAUgE,qBAAuB,SAAU3B,GACrD,IAAIuC,EAAQlF,KAAKgF,UAAUrC,GAC3B,OAAOuC,EAAQrF,EAAcsF,YACxBtF,EAAciE,kBAAoBoB,GAASrF,EAAcuF,qBAIlEvF,EAAcS,UAAU8C,OAAS,WAC7BpD,KAAK2E,gBACL3E,KAAKuD,YAAc,KACnBvD,KAAK0D,WAAa,KAClB1D,KAAKwE,YAAc,KACnBxE,KAAKwD,QAAU,KACfxD,KAAKgE,gBAAiB,EACtBhE,KAAK0E,aAAc,EACnB1E,KAAKqF,cAAgB,IAAItF,EACzBuF,cAActF,KAAK+D,qBAGvBlE,EAAcS,UAAUmD,UAAY,SAAUd,EAAG4C,GAI7C,OAHI5C,GAAKA,EAAEmC,UACPnC,EAAIA,EAAEmC,QAAQ,IAEX,CAAErD,EAAG8D,EAAO5C,EAAE6C,MAAQ7C,EAAE8C,QAAS/D,EAAG6D,EAAO5C,EAAE+C,MAAQ/C,EAAEgD,UAGlE9F,EAAcS,UAAU0E,UAAY,SAAUrC,GAC1C,GAAI9C,EAAciE,mBAAqB9D,KAAKwD,QAAW,OAAO,EAC9D,IAAIoC,EAAI5F,KAAKyD,UAAUd,GACvB,OAAOkD,KAAKC,IAAIF,EAAEnE,EAAIzB,KAAKwD,QAAQ/B,GAAKoE,KAAKC,IAAIF,EAAElE,EAAI1B,KAAKwD,QAAQ9B,IAGxE7B,EAAcS,UAAU+D,WAAa,SAAU1B,GAE3C,IADA,IAAIoD,EAAK/F,KAAKyD,UAAUd,GAAIqD,EAAKnE,SAASoE,iBAAiBF,EAAGtE,EAAGsE,EAAGrE,GAC7DsE,GAA4C,QAAtCE,iBAAiBF,GAAIG,eAC9BH,EAAKA,EAAGI,cAEZ,OAAOJ,GAGXnG,EAAcS,UAAUiE,aAAe,SAAU5B,GAEzC3C,KAAK4D,MACL5D,KAAK2E,gBAGT,IAAItB,EAAMrD,KAAKuB,YAAcvB,KAAKuD,YAKlC,GAJAvD,KAAK4D,KAAOP,EAAIgD,WAAU,GAC1BrG,KAAKsG,WAAWjD,EAAKrD,KAAK4D,MAC1B5D,KAAK4D,KAAK2C,MAAMC,IAAMxG,KAAK4D,KAAK2C,MAAME,KAAO,WAExCzG,KAAKuB,WAAY,CAClB,IAAImF,EAAKrD,EAAIsD,wBAAyBZ,EAAK/F,KAAKyD,UAAUd,GAC1D3C,KAAKwB,WAAa,CAAEC,EAAGsE,EAAGtE,EAAIiF,EAAGD,KAAM/E,EAAGqE,EAAGrE,EAAIgF,EAAGF,KACpDxG,KAAK4D,KAAK2C,MAAMK,QAAU/G,EAAcgH,SAASC,WAGrD9G,KAAKyE,WAAW9B,GAChBd,SAASkF,KAAKC,YAAYhH,KAAK4D,OAGnC/D,EAAcS,UAAUqE,cAAgB,WAChC3E,KAAK4D,MAAQ5D,KAAK4D,KAAKwC,eACvBpG,KAAK4D,KAAKwC,cAAca,YAAYjH,KAAK4D,MAE7C5D,KAAK4D,KAAO,KACZ5D,KAAKuB,WAAa,MAGtB1B,EAAcS,UAAUmE,WAAa,SAAU9B,GAC3C,IAAIC,EAAQ5C,KACZkH,uBAAsB,WAClB,GAAItE,EAAMgB,KAAM,CACZ,IAAImC,EAAKnD,EAAMa,UAAUd,GAAG,GAAOwE,EAAIvE,EAAMgB,KAAK2C,MAClDY,EAAEC,SAAW,WACbD,EAAEhB,cAAgB,OAClBgB,EAAEE,OAAS,SACXF,EAAEV,KAAOZ,KAAKyB,MAAMvB,EAAGtE,EAAImB,EAAMpB,WAAWC,GAAK,KACjD0F,EAAEX,IAAMX,KAAKyB,MAAMvB,EAAGrE,EAAIkB,EAAMpB,WAAWE,GAAK,UAK5D7B,EAAcS,UAAUiH,WAAa,SAAUC,EAAKnE,EAAKoE,GACrD,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAM1C,OAAQ2C,IAAK,CACnC,IAAI9B,EAAI6B,EAAMC,GACdF,EAAI5B,GAAKvC,EAAIuC,KAGrB/F,EAAcS,UAAUgG,WAAa,SAAUjD,EAAKmE,GAMhD,GAJA3H,EAAc8H,SAASC,SAAQ,SAAUC,GACrCL,EAAIM,gBAAgBD,MAGpBxE,aAAe0E,kBAAmB,CAClC,IAAIC,EAAO3E,EAAK4E,EAAOT,EACvBS,EAAKC,MAAQF,EAAKE,MAClBD,EAAKE,OAASH,EAAKG,OACnBF,EAAKG,WAAW,MAAMC,UAAUL,EAAM,EAAG,GAI7C,IADA,IAAIM,EAAKpC,iBAAiB7C,GACjBqE,EAAI,EAAGA,EAAIY,EAAGvD,OAAQ2C,IAAK,CAChC,IAAIa,EAAMD,EAAGZ,GACTa,EAAI3D,QAAQ,cAAgB,IAC5B4C,EAAIjB,MAAMgC,GAAOD,EAAGC,IAG5Bf,EAAIjB,MAAMJ,cAAgB,OAE1B,IAASuB,EAAI,EAAGA,EAAIrE,EAAImF,SAASzD,OAAQ2C,IACrC1H,KAAKsG,WAAWjD,EAAImF,SAASd,GAAIF,EAAIgB,SAASd,KAGtD7H,EAAcS,UAAU2C,eAAiB,SAAUN,EAAG7B,EAAMoC,GACxD,GAAIP,GAAKO,EAAQ,CACb,IAAIuF,EAAM5G,SAAS6G,YAAY,SAAUC,EAAIhG,EAAEmC,QAAUnC,EAAEmC,QAAQ,GAAKnC,EAQxE,OAPA8F,EAAIG,UAAU9H,GAAM,GAAM,GAC1B2H,EAAII,OAAS,EACbJ,EAAIK,MAAQL,EAAIM,QAAU,EAC1B/I,KAAKuH,WAAWkB,EAAK9F,EAAG9C,EAAcmJ,WACtChJ,KAAKuH,WAAWkB,EAAKE,EAAG9I,EAAcoJ,UACtCR,EAAIS,aAAelJ,KAAKqF,cACxBnC,EAAOiG,cAAcV,GACdA,EAAI5D,iBAEf,OAAO,GAGXhF,EAAcS,UAAUgD,kBAAoB,SAAUX,GAClD,KAAOA,EAAGA,EAAIA,EAAEyD,cACZ,GAAIzD,EAAEyG,aAAa,cAAgBzG,EAAE0G,UACjC,OAAO1G,EAGf,OAAO,MAEJ9C,EA1SU,GA4STA,EAAcyB,UAAY,IAAIzB,EAE1CA,EAAcsF,WAAa,EAC3BtF,EAAcgH,SAAW,GACzBhH,EAAcmD,UAAY,IAC1BnD,EAAcgE,SAAW,IACzBhE,EAAciE,kBAAmB,EACjCjE,EAAcoE,gBAAkB,IAChCpE,EAAcoF,iBAAmB,GACjCpF,EAAcuF,oBAAsB,EAEpCvF,EAAc8H,SAAW,2BAA2B2B,MAAM,KAG1DzJ,EAAcmJ,UAAY,kCAAkCM,MAAM,KAClEzJ,EAAcoJ,SAAW,8DAA8DK,MAAM,KAC7FxJ,EAAgBD,cAAgBA,EA5bpC,CA6bGA,IAAkBA,EAAgB,M,yFC5btB,SAAS0J,EAAT,GAAkE,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,cAW3D,OACI,yBAAKC,UAAU,yBAAyBP,WAAS,EAACQ,YAAa,SAAAlH,GAAC,OAAoBA,EAT9EuG,aAAalI,QAAQ,gBAAiBwI,QAC5CE,KAQwFI,UAAW,SAAAnH,GAJnGgH,MAKKF,GCZE,SAASM,EAAT,GAAoG,IAAlFN,EAAiF,EAAjFA,MAAOO,EAA0E,EAA1EA,WAAYC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,WAAYT,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,cAO7F,OACI,yBAAKC,UAAU,SAASrD,MAAO,CAAE6D,gBAAiBJ,GAAcK,WAAY,SAAA1H,GAAoBA,EAL1FQ,kBAK8FmH,OAAQ,SAAA3H,GAAC,OAAIwH,EAAWxH,EAAGuH,KAC3H,4BAAKT,GACL,6BAEA,yBAAKG,UAAU,mBACVK,EAAQM,KAAI,SAAAC,GAAK,OACd,kBAACjB,EAAD,CAAOhB,IAAKiC,EAAMC,GAAIjB,SAAUgB,EAAMC,GAAIhB,MAAOe,EAAMf,MAAOC,aAAcA,EAAcC,cAAeA,QAGjH,6BACA,uBAAGC,UAAU,kBAAkBK,EAAQlF,OAAvC,QAAuE,IAAnBkF,EAAQlF,OAAe,IAAM,QClB9E,SAAS2F,EAAT,GAAsE,IAArDC,EAAoD,EAApDA,QAASR,EAA2C,EAA3CA,WAAYT,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,cAGzDiB,EAAmBD,EAAQE,QAAO,SAAAlI,GAAC,MAAmB,cAAfA,EAAEuH,YACzCY,EAAuBH,EAAQE,QAAO,SAAAlI,GAAC,MAAmB,kBAAfA,EAAEuH,YAC7Ca,EAAoBJ,EAAQE,QAAO,SAAAlI,GAAC,MAAmB,eAAfA,EAAEuH,YAC1Cc,EAAiBL,EAAQE,QAAO,SAAAlI,GAAC,MAAmB,YAAfA,EAAEuH,YAE7C,OACI,yBAAKO,GAAG,SACJ,yBAAKb,UAAU,cACX,kBAACG,EAAD,CAAQN,MAAM,YAAYO,WAAW,YAAYC,QAASW,EAAkBV,SAAS,YAAYC,WAAYA,EAAYT,aAAcA,EAAcC,cAAeA,IACpK,kBAACI,EAAD,CAAQN,MAAM,gBAAgBO,WAAW,YAAYC,QAASa,EAAsBZ,SAAS,gBAAgBC,WAAYA,EAAYT,aAAcA,EAAcC,cAAeA,KAEpL,yBAAKC,UAAU,cACX,kBAACG,EAAD,CAAQN,MAAM,aAAaO,WAAW,YAAYC,QAASc,EAAmBb,SAAS,aAAaC,WAAYA,EAAYT,aAAcA,EAAcC,cAAeA,IACvK,kBAACI,EAAD,CAAQN,MAAM,UAAUO,WAAW,YAAYC,QAASe,EAAgBd,SAAS,UAAUC,WAAYA,EAAYT,aAAcA,EAAcC,cAAeA,MCjB/J,SAASsB,EAAT,GAA8D,IAA1CC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,WAAYhB,EAAc,EAAdA,WAK1D,OACI,4BAAQM,GAAIU,EAAa,cAAgB,WAAYC,QAASF,EAAeb,WAAY,SAAA1H,GAAoBA,EAJvGQ,kBAI2GmH,OAAQ,SAAA3H,GAAC,OAAIwH,EAAWxH,EAAG,YACvIwI,EAAa,qBAAQ,KCPnB,SAASE,EAAT,GAAkD,IAAhCC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,YACvCC,EAAWC,iBAAO,IAClBC,EAAcD,iBAAO,IAG3B,SAASE,IACL,IAAMlC,EAAQ+B,EAASI,QAAQnL,MACzByJ,EAAWwB,EAAYE,QAAQnL,MAErC8K,EAAY9B,EAAOS,GACnBoB,IAKJ,OACI,yBAAKb,GAAG,UACJ,yBAAKA,GAAG,mBACJ,2BAAOoB,IAAKL,EAAUf,GAAG,yBAAyB3J,KAAK,OAAOgL,YAAY,QAAQC,QAL9F,SAAmBC,GAAuB,UAAdA,EAAMzD,KAAmBoD,KAK6DM,WAAS,IAC/G,4BAAQJ,IAAKH,EAAaQ,KAAK,aAAazB,GAAG,+BAC3C,4BAAQhK,MAAM,aAAd,aACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,WAAd,YAGJ,yBAAKgK,GAAG,2BACJ,4BAAQA,GAAG,+BAA+BW,QAASO,GAAnD,OACA,4BAAQlB,GAAG,kCAAkCW,QAASE,GAAtD,a,wBC0CLa,MA7Df,WAAgB,IAAD,EACuBC,oBAAS,GADhC,mBACNC,EADM,KACMC,EADN,OAEuBF,oBAAS,GAFhC,mBAENjB,EAFM,KAEMoB,EAFN,OAGiBH,mBAASI,KAAKC,MAAMC,aAAaC,QALvC,oBAKsE,IAHjF,mBAGNhC,EAHM,KAGGiC,EAHH,KAuBb,SAASzC,EAAW6B,EAAO9B,GACzB8B,EAAM7I,iBACN,IAAIqG,EAAWwC,EAAM9C,aAAanI,QAAQ,iBAEtC8L,EAAalC,EAAQJ,KAAI,SAAA5H,GAK3B,OAJIA,EAAE8H,KAAOjB,IACX7G,EAAEuH,SAAWA,GAGRvH,KAGTkK,EAAaA,EAAWhC,QAAO,SAAAlI,GAAC,MAAmB,WAAfA,EAAEuH,YACtCP,IACAiD,EAAWC,GAOb,SAASlD,IACP4C,GAAc,GAGhB,OA3CAO,qBAAU,WACRJ,aAAaK,QARS,iBAQkBP,KAAKQ,UAAUrC,MACtD,CAACA,IA0CF,yBAAKF,GAAG,OACL4B,GAAc,kBAAChB,EAAD,CAAQC,eArC3B,WACEgB,GAAc,IAoC2Cf,YAjC3D,SAAqB9B,EAAOS,GAC1B,IAAM+C,EAAW,CAAExD,MAAOA,EAAOS,SAAUA,EAAUO,GAAIyC,eAEzDN,EAAW,GAAD,mBAAKjC,GAAL,CAAcsC,QAgCtB,4BAAQxC,GAAG,eAAX,cAEA,kBAACC,EAAD,CAAOC,QAASA,EAASR,WAAYA,EAAYT,aAdrD,WACE6C,GAAc,IAaiE5C,cAAeA,IAE5F,kBAACsB,EAAD,CAAUC,cA/Cd,WACEoB,GAAc,IA8C4BnB,WAAYA,EAAYhB,WAAYA,MC/DlFgD,IAASC,OAAO,kBAAC,EAAD,MAASvL,SAASwL,eAAe,U","file":"static/js/main.cb4d84fb.chunk.js","sourcesContent":["var DragDropTouch;\n(function (DragDropTouch_1) {\n    'use strict';\n    /**\n     * Object used to hold the data that is being dragged during drag and drop operations.\n     *\n     * It may hold one or more data items of different types. For more information about\n     * drag and drop operations and data transfer objects, see\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\n     *\n     * This object is created automatically by the @see:DragDropTouch singleton and is\n     * accessible through the @see:dataTransfer property of all drag events.\n     */\n    var DataTransfer = (function () {\n        function DataTransfer() {\n            this._dropEffect = 'move';\n            this._effectAllowed = 'all';\n            this._data = {};\n        }\n        Object.defineProperty(DataTransfer.prototype, \"dropEffect\", {\n            /**\n             * Gets or sets the type of drag-and-drop operation currently selected.\n             * The value must be 'none',  'copy',  'link', or 'move'.\n             */\n            get: function () {\n                return this._dropEffect;\n            },\n            set: function (value) {\n                this._dropEffect = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DataTransfer.prototype, \"effectAllowed\", {\n            /**\n             * Gets or sets the types of operations that are possible.\n             * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\n             * 'linkMove', 'move', 'all' or 'uninitialized'.\n             */\n            get: function () {\n                return this._effectAllowed;\n            },\n            set: function (value) {\n                this._effectAllowed = value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DataTransfer.prototype, \"types\", {\n            /**\n             * Gets an array of strings giving the formats that were set in the @see:dragstart event.\n             */\n            get: function () {\n                return Object.keys(this._data);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Removes the data associated with a given type.\n         *\n         * The type argument is optional. If the type is empty or not specified, the data\n         * associated with all types is removed. If data for the specified type does not exist,\n         * or the data transfer contains no data, this method will have no effect.\n         *\n         * @param type Type of data to remove.\n         */\n        DataTransfer.prototype.clearData = function (type) {\n            if (type != null) {\n                delete this._data[type];\n            }\n            else {\n                this._data = null;\n            }\n        };\n        /**\n         * Retrieves the data for a given type, or an empty string if data for that type does\n         * not exist or the data transfer contains no data.\n         *\n         * @param type Type of data to retrieve.\n         */\n        DataTransfer.prototype.getData = function (type) {\n            return this._data[type] || '';\n        };\n        /**\n         * Set the data for a given type.\n         *\n         * For a list of recommended drag types, please see\n         * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\n         *\n         * @param type Type of data to add.\n         * @param value Data to add.\n         */\n        DataTransfer.prototype.setData = function (type, value) {\n            this._data[type] = value;\n        };\n        /**\n         * Set the image to be used for dragging if a custom one is desired.\n         *\n         * @param img An image element to use as the drag feedback image.\n         * @param offsetX The horizontal offset within the image.\n         * @param offsetY The vertical offset within the image.\n         */\n        DataTransfer.prototype.setDragImage = function (img, offsetX, offsetY) {\n            var ddt = DragDropTouch._instance;\n            ddt._imgCustom = img;\n            ddt._imgOffset = { x: offsetX, y: offsetY };\n        };\n        return DataTransfer;\n    }());\n    DragDropTouch_1.DataTransfer = DataTransfer;\n    /**\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\n     *\n     * The @see:DragDropTouch class listens to touch events and raises the\n     * appropriate HTML5 drag/drop events as if the events had been caused\n     * by mouse actions.\n     *\n     * The purpose of this class is to enable using existing, standard HTML5\n     * drag/drop code on mobile devices running IOS or Android.\n     *\n     * To use, include the DragDropTouch.js file on the page. The class will\n     * automatically start monitoring touch events and will raise the HTML5\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\n     * should be handled by the application.\n     *\n     * For details and examples on HTML drag and drop, see\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\n     */\n    var DragDropTouch = (function () {\n        /**\n         * Initializes the single instance of the @see:DragDropTouch class.\n         */\n        function DragDropTouch() {\n            this._lastClick = 0;\n            // enforce singleton pattern\n            if (DragDropTouch._instance) {\n                throw 'DragDropTouch instance already created.';\n            }\n            // detect passive event support\n            // https://github.com/Modernizr/Modernizr/issues/1894\n            var supportsPassive = false;\n            document.addEventListener('test', function () { }, {\n                get passive() {\n                    supportsPassive = true;\n                    return true;\n                }\n            });\n            // listen to touch events\n            if ('ontouchstart' in document) {\n                var d = document, ts = this._touchstart.bind(this), tm = this._touchmove.bind(this), te = this._touchend.bind(this), opt = supportsPassive ? { passive: false, capture: false } : false;\n                d.addEventListener('touchstart', ts, opt);\n                d.addEventListener('touchmove', tm, opt);\n                d.addEventListener('touchend', te);\n                d.addEventListener('touchcancel', te);\n            }\n        }\n        /**\n         * Gets a reference to the @see:DragDropTouch singleton.\n         */\n        DragDropTouch.getInstance = function () {\n            return DragDropTouch._instance;\n        };\n        // ** event handlers\n        DragDropTouch.prototype._touchstart = function (e) {\n            var _this = this;\n            if (this._shouldHandle(e)) {\n                // raise double-click and prevent zooming\n                if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\n                    if (this._dispatchEvent(e, 'dblclick', e.target)) {\n                        e.preventDefault();\n                        this._reset();\n                        return;\n                    }\n                }\n                // clear all variables\n                this._reset();\n                // get nearest draggable element\n                var src = this._closestDraggable(e.target);\n                if (src) {\n                    // give caller a chance to handle the hover/move events\n                    if (!this._dispatchEvent(e, 'mousemove', e.target) &&\n                        !this._dispatchEvent(e, 'mousedown', e.target)) {\n                        // get ready to start dragging\n                        this._dragSource = src;\n                        this._ptDown = this._getPoint(e);\n                        this._lastTouch = e;\n                        e.preventDefault();\n                        // show context menu if the user hasn't started dragging after a while\n                        setTimeout(function () {\n                            if (_this._dragSource == src && _this._img == null) {\n                                if (_this._dispatchEvent(e, 'contextmenu', src)) {\n                                    _this._reset();\n                                }\n                            }\n                        }, DragDropTouch._CTXMENU);\n                        if (DragDropTouch._ISPRESSHOLDMODE) {\n                            this._pressHoldInterval = setTimeout(function () {\n                                _this._isDragEnabled = true;\n                                _this._touchmove(e);\n                            }, DragDropTouch._PRESSHOLDAWAIT);\n                        }\n                    }\n                }\n            }\n        };\n        DragDropTouch.prototype._touchmove = function (e) {\n            if (this._shouldCancelPressHoldMove(e)) {\n              this._reset();\n              return;\n            }\n            if (this._shouldHandleMove(e) || this._shouldHandlePressHoldMove(e)) {\n                // see if target wants to handle move\n                var target = this._getTarget(e);\n                if (this._dispatchEvent(e, 'mousemove', target)) {\n                    this._lastTouch = e;\n                    e.preventDefault();\n                    return;\n                }\n                // start dragging\n                if (this._dragSource && !this._img && this._shouldStartDragging(e)) {\n                    this._dispatchEvent(e, 'dragstart', this._dragSource);\n                    this._createImage(e);\n                    this._dispatchEvent(e, 'dragenter', target);\n                }\n                // continue dragging\n                if (this._img) {\n                    this._lastTouch = e;\n                    e.preventDefault(); // prevent scrolling\n                    if (target != this._lastTarget) {\n                        this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\n                        this._dispatchEvent(e, 'dragenter', target);\n                        this._lastTarget = target;\n                    }\n                    this._moveImage(e);\n                    this._isDropZone = this._dispatchEvent(e, 'dragover', target);\n                }\n            }\n        };\n        DragDropTouch.prototype._touchend = function (e) {\n            if (this._shouldHandle(e)) {\n                // see if target wants to handle up\n                if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\n                    e.preventDefault();\n                    return;\n                }\n                // user clicked the element but didn't drag, so clear the source and simulate a click\n                if (!this._img) {\n                    this._dragSource = null;\n                    this._dispatchEvent(this._lastTouch, 'click', e.target);\n                    this._lastClick = Date.now();\n                }\n                // finish dragging\n                this._destroyImage();\n                if (this._dragSource) {\n                    if (e.type.indexOf('cancel') < 0 && this._isDropZone) {\n                        this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\n                    }\n                    this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\n                    this._reset();\n                }\n            }\n        };\n        // ** utilities\n        // ignore events that have been handled or that involve more than one touch\n        DragDropTouch.prototype._shouldHandle = function (e) {\n            return e &&\n                !e.defaultPrevented &&\n                e.touches && e.touches.length < 2;\n        };\n\n        // use regular condition outside of press & hold mode\n        DragDropTouch.prototype._shouldHandleMove = function (e) {\n          return !DragDropTouch._ISPRESSHOLDMODE && this._shouldHandle(e);\n        };\n\n        // allow to handle moves that involve many touches for press & hold\n        DragDropTouch.prototype._shouldHandlePressHoldMove = function (e) {\n          return DragDropTouch._ISPRESSHOLDMODE &&\n              this._isDragEnabled && e && e.touches && e.touches.length;\n        };\n\n        // reset data if user drags without pressing & holding\n        DragDropTouch.prototype._shouldCancelPressHoldMove = function (e) {\n          return DragDropTouch._ISPRESSHOLDMODE && !this._isDragEnabled &&\n              this._getDelta(e) > DragDropTouch._PRESSHOLDMARGIN;\n        };\n\n        // start dragging when specified delta is detected\n        DragDropTouch.prototype._shouldStartDragging = function (e) {\n            var delta = this._getDelta(e);\n            return delta > DragDropTouch._THRESHOLD ||\n                (DragDropTouch._ISPRESSHOLDMODE && delta >= DragDropTouch._PRESSHOLDTHRESHOLD);\n        }\n\n        // clear all members\n        DragDropTouch.prototype._reset = function () {\n            this._destroyImage();\n            this._dragSource = null;\n            this._lastTouch = null;\n            this._lastTarget = null;\n            this._ptDown = null;\n            this._isDragEnabled = false;\n            this._isDropZone = false;\n            this._dataTransfer = new DataTransfer();\n            clearInterval(this._pressHoldInterval);\n        };\n        // get point for a touch event\n        DragDropTouch.prototype._getPoint = function (e, page) {\n            if (e && e.touches) {\n                e = e.touches[0];\n            }\n            return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\n        };\n        // get distance between the current touch event and the first one\n        DragDropTouch.prototype._getDelta = function (e) {\n            if (DragDropTouch._ISPRESSHOLDMODE && !this._ptDown) { return 0; }\n            var p = this._getPoint(e);\n            return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\n        };\n        // get the element at a given touch event\n        DragDropTouch.prototype._getTarget = function (e) {\n            var pt = this._getPoint(e), el = document.elementFromPoint(pt.x, pt.y);\n            while (el && getComputedStyle(el).pointerEvents == 'none') {\n                el = el.parentElement;\n            }\n            return el;\n        };\n        // create drag image from source element\n        DragDropTouch.prototype._createImage = function (e) {\n            // just in case...\n            if (this._img) {\n                this._destroyImage();\n            }\n            // create drag image from custom element or drag source\n            var src = this._imgCustom || this._dragSource;\n            this._img = src.cloneNode(true);\n            this._copyStyle(src, this._img);\n            this._img.style.top = this._img.style.left = '-9999px';\n            // if creating from drag source, apply offset and opacity\n            if (!this._imgCustom) {\n                var rc = src.getBoundingClientRect(), pt = this._getPoint(e);\n                this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\n                this._img.style.opacity = DragDropTouch._OPACITY.toString();\n            }\n            // add image to document\n            this._moveImage(e);\n            document.body.appendChild(this._img);\n        };\n        // dispose of drag image element\n        DragDropTouch.prototype._destroyImage = function () {\n            if (this._img && this._img.parentElement) {\n                this._img.parentElement.removeChild(this._img);\n            }\n            this._img = null;\n            this._imgCustom = null;\n        };\n        // move the drag image element\n        DragDropTouch.prototype._moveImage = function (e) {\n            var _this = this;\n            requestAnimationFrame(function () {\n                if (_this._img) {\n                    var pt = _this._getPoint(e, true), s = _this._img.style;\n                    s.position = 'absolute';\n                    s.pointerEvents = 'none';\n                    s.zIndex = '999999';\n                    s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\n                    s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\n                }\n            });\n        };\n        // copy properties from an object to another\n        DragDropTouch.prototype._copyProps = function (dst, src, props) {\n            for (var i = 0; i < props.length; i++) {\n                var p = props[i];\n                dst[p] = src[p];\n            }\n        };\n        DragDropTouch.prototype._copyStyle = function (src, dst) {\n            // remove potentially troublesome attributes\n            DragDropTouch._rmvAtts.forEach(function (att) {\n                dst.removeAttribute(att);\n            });\n            // copy canvas content\n            if (src instanceof HTMLCanvasElement) {\n                var cSrc = src, cDst = dst;\n                cDst.width = cSrc.width;\n                cDst.height = cSrc.height;\n                cDst.getContext('2d').drawImage(cSrc, 0, 0);\n            }\n            // copy style (without transitions)\n            var cs = getComputedStyle(src);\n            for (var i = 0; i < cs.length; i++) {\n                var key = cs[i];\n                if (key.indexOf('transition') < 0) {\n                    dst.style[key] = cs[key];\n                }\n            }\n            dst.style.pointerEvents = 'none';\n            // and repeat for all children\n            for (var i = 0; i < src.children.length; i++) {\n                this._copyStyle(src.children[i], dst.children[i]);\n            }\n        };\n        DragDropTouch.prototype._dispatchEvent = function (e, type, target) {\n            if (e && target) {\n                var evt = document.createEvent('Event'), t = e.touches ? e.touches[0] : e;\n                evt.initEvent(type, true, true);\n                evt.button = 0;\n                evt.which = evt.buttons = 1;\n                this._copyProps(evt, e, DragDropTouch._kbdProps);\n                this._copyProps(evt, t, DragDropTouch._ptProps);\n                evt.dataTransfer = this._dataTransfer;\n                target.dispatchEvent(evt);\n                return evt.defaultPrevented;\n            }\n            return false;\n        };\n        // gets an element's closest draggable ancestor\n        DragDropTouch.prototype._closestDraggable = function (e) {\n            for (; e; e = e.parentElement) {\n                if (e.hasAttribute('draggable') && e.draggable) {\n                    return e;\n                }\n            }\n            return null;\n        };\n        return DragDropTouch;\n    }());\n    /*private*/ DragDropTouch._instance = new DragDropTouch(); // singleton\n    // constants\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\n    DragDropTouch._ISPRESSHOLDMODE = false; // decides of press & hold mode presence\n    DragDropTouch._PRESSHOLDAWAIT = 400; // ms to wait before press & hold is detected\n    DragDropTouch._PRESSHOLDMARGIN = 25; // pixels that finger might shiver while pressing\n    DragDropTouch._PRESSHOLDTHRESHOLD = 0; // pixels to move before drag starts\n    // copy styles/attributes from drag source to drag image element\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\n    // synthesize and dispatch an event\n    // returns true if the event has been handled (e.preventDefault == true)\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY,offsetX,offsetY'.split(',');\n    DragDropTouch_1.DragDropTouch = DragDropTouch;\n})(DragDropTouch || (DragDropTouch = {}));\n","import React from 'react'\r\n\r\nexport default function Entry({ entryKey, title, enableThrash, disableThrash }) {\r\n    function handleDragStart(event) {\r\n        // event.preventDefault();\r\n        event.dataTransfer.setData(\"text/entryKey\", entryKey);\r\n        enableThrash();\r\n    }\r\n\r\n    function handleDragEnd(event) {\r\n        disableThrash();\r\n    }\r\n    // Represents every entry that is added and removed from each category\r\n    return (\r\n        <div className=\"Bucket__content__entry\" draggable onDragStart={e => handleDragStart(e)} onDragEnd={e => handleDragEnd(e)}>\r\n            {title}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Entry from './Entry';\r\n\r\nexport default function Bucket({ title, background, content, category, handleDrop, enableThrash, disableThrash }) {\r\n\r\n    function handleDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Should represent each of the draggable slots for each entry\r\n    return (\r\n        <div className=\"Bucket\" style={{ backgroundColor: background }} onDragOver={e => handleDragOver(e)} onDrop={e => handleDrop(e, category)}>\r\n            <h2>{title}</h2>\r\n            <hr />\r\n\r\n            <div className=\"Bucket__content\">\r\n                {content.map(entry => (\r\n                    <Entry key={entry.id} entryKey={entry.id} title={entry.title} enableThrash={enableThrash} disableThrash={disableThrash} />\r\n                ))}\r\n            </div>\r\n            <hr />\r\n            <p className=\"Bucket__footer\">{content.length} entr{content.length === 1 ? \"y\" : \"ies\"}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Bucket from './Bucket'\r\n\r\nexport default function Table({ entries, handleDrop, enableThrash, disableThrash }) {\r\n\r\n    // Using Flexbox instead of CSS Grid because of bad experiences with CSS Grid\r\n    const strengthsContent = entries.filter(e => e.category === \"strengths\");\r\n    const opportunitiesContent = entries.filter(e => e.category === \"opportunities\");\r\n    const weaknessesContent = entries.filter(e => e.category === \"weaknesses\");\r\n    const threatsContent = entries.filter(e => e.category === \"threats\");\r\n\r\n    return (\r\n        <div id=\"Table\">\r\n            <div className=\"Table__row\">\r\n                <Bucket title=\"Strengths\" background=\"#218559BB\" content={strengthsContent} category=\"strengths\" handleDrop={handleDrop} enableThrash={enableThrash} disableThrash={disableThrash} />\r\n                <Bucket title=\"Opportunities\" background=\"#06A2CBBB\" content={opportunitiesContent} category=\"opportunities\" handleDrop={handleDrop} enableThrash={enableThrash} disableThrash={disableThrash} />\r\n            </div>\r\n            <div className=\"Table__row\">\r\n                <Bucket title=\"Weaknesses\" background=\"#DD1E2FBB\" content={weaknessesContent} category=\"weaknesses\" handleDrop={handleDrop} enableThrash={enableThrash} disableThrash={disableThrash} />\r\n                <Bucket title=\"Threats\" background=\"#EBB035BB\" content={threatsContent} category=\"threats\" handleDrop={handleDrop} enableThrash={enableThrash} disableThrash={disableThrash} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function AddEntry({ enableOverlay, thrashMode, handleDrop }) {\r\n    function handleDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <button id={thrashMode ? \"RemoveEntry\" : \"AddEntry\"} onClick={enableOverlay} onDragOver={e => handleDragOver(e)} onDrop={e => handleDrop(e, \"thrash\")}>\r\n            {thrashMode ? \"🗑️\" : \"+\"}\r\n        </button>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\n\r\nexport default function Dialog({ disableOverlay, addNewEntry }) {\r\n    const titleRef = useRef(\"\");\r\n    const categoryRef = useRef(\"\");\r\n\r\n    // Used to lift title and category refs up\r\n    function addEntry() {\r\n        const title = titleRef.current.value;\r\n        const category = categoryRef.current.value;\r\n\r\n        addNewEntry(title, category);\r\n        disableOverlay();\r\n    }\r\n\r\n    function handleKey(event) { event.key === \"Enter\" && addEntry(); }\r\n\r\n    return (\r\n        <div id=\"Dialog\">\r\n            <div id=\"Dialog__overlay\">\r\n                <input ref={titleRef} id=\"Dialog__overlay__title\" type=\"text\" placeholder=\"Entry\" onKeyUp={handleKey} autoFocus />\r\n                <select ref={categoryRef} name=\"categories\" id=\"Dialog__overlay__categories\">\r\n                    <option value=\"strengths\">Strengths</option>\r\n                    <option value=\"opportunities\">Opportunities</option>\r\n                    <option value=\"weaknesses\">Weaknesses</option>\r\n                    <option value=\"threats\">Threats</option>\r\n                </select>\r\n\r\n                <div id=\"Dialog__overlay__action\">\r\n                    <button id=\"Dialog__overlay__action__add\" onClick={addEntry}>Add</button>\r\n                    <button id=\"Dialog__overlay__action__cancel\" onClick={disableOverlay}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport Table from './components/Table';\nimport AddEntry from './components/AddEntry.js';\nimport Dialog from './components/Dialog'\nimport { v4 as uuidv4 } from 'uuid';\nimport './styles/styles.scss'\n// import 'drag-drop-touch'\nimport './scripts/dragdroptouch.js'\n\nconst LOCAL_STORAGE_KEY = \"swot.app.state\";\n\nfunction App() {\n  const [showDialog, setShowDialog] = useState(false);\n  const [thrashMode, setThrashMode] = useState(false);\n  const [entries, setEntries] = useState(JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || []);\n\n  useEffect(function () {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(entries));\n  }, [entries]);\n\n  function enableOverlay() {\n    setShowDialog(true);\n  }\n\n  function disableOverlay() {\n    setShowDialog(false);\n  }\n\n  function addNewEntry(title, category) {\n    const newEntry = { title: title, category: category, id: uuidv4() };\n\n    setEntries([...entries, newEntry]);\n  }\n\n  function handleDrop(event, category) {\n    event.preventDefault();\n    let entryKey = event.dataTransfer.getData(\"text/entryKey\");\n\n    let newEntries = entries.map(e => {\n      if (e.id === entryKey) {\n        e.category = category;\n      }\n\n      return e;\n    });\n\n    newEntries = newEntries.filter(e => e.category !== \"thrash\")\n    disableThrash();\n    setEntries(newEntries);\n  }\n\n  function enableThrash() {\n    setThrashMode(true);\n  }\n\n  function disableThrash() {\n    setThrashMode(false);\n  }\n\n  return (\n    <div id=\"app\">\n      {showDialog && <Dialog disableOverlay={disableOverlay} addNewEntry={addNewEntry} />}\n\n      <header id=\"app__header\">SWOT Table</header>\n\n      <Table entries={entries} handleDrop={handleDrop} enableThrash={enableThrash} disableThrash={disableThrash} />\n\n      <AddEntry enableOverlay={enableOverlay} thrashMode={thrashMode} handleDrop={handleDrop} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}